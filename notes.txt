take a 9x9 square and take the average color and then make one pixel of that color.
or pick a dominant color.

pip freeze > requirements.txt
pip install -r requirements.txt

Notes on program:
1. pixelate - > for a given grid set all values to a pixel at one color (average or dominant)

# takes in color and returns a color
color 8bit(r, g, b) - > r, g, b
64 colors 2bit 2bit 2bit
convert 8 bit to 2 bit
round each bit to nearest 2 bit number
0-63 = 0
64 - 127 = 1
128 - ? = 2

or // 64 from 8 bit to 2 bit

4-bit color
red 1 bit, green 2 bit, blue 1 bit gives 16 colors
use if statements

converts from 8-bit to 4-bit
color 4bit(r,g,b) -> string used as key for dict that maps to better looking colors

function that finds the closest "color" dot from the picked color from a group of colors

tuples = (1, 2, 3) can be stored into a key of dictionary

use the 64 rounding function to get 64 colors then use code to get distance between nearest neighbors
(rsub1 - rsub2)squared + (bsub1 - bsub2)squared + (gsub1 - gsub2)squared then take square root to get float
compute 64 colors (rounded) against 16 colors (target)